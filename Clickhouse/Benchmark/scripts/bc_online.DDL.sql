CREATE TABLE bc_online.ck_adm_zh_supplychain_sales_stock ( dateTime String,  stock Float64,  dt String,  saleOccupy Float64,  skuId String,  thirdIndId String,  storeFlag String,  stockAvailable Float64,  sales Float64,  virtualId Array(String),  dcName String,  brandId String,  dcId String,  saleDeal Float64,  avgSales30 Float64) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_adm_zh_supplychain_sales_stock/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, brandId, thirdIndId, virtualId, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_adm_zh_supplychain_sales_stock_d ( dateTime String,  stock Float64,  dt String,  saleOccupy Float64,  skuId String,  thirdIndId String,  storeFlag String,  stockAvailable Float64,  sales Float64,  virtualId Array(String),  dcName String,  brandId String,  dcId String,  saleDeal Float64,  avgSales30 Float64) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_adm_zh_supplychain_sales_stock, rand())
;
CREATE TABLE bc_online.ck_app_zh_customer_deal_user_lastbuy_day ( skuOfferAmount Float64,  brandId String,  dateTime String,  promotionType Array(String),  suitOfferAmount Float64,  lastBrandIdDealTm String,  userLogAcct String,  thirdIndId String,  provinceId String,  provinceName String,  todayDealNum Int64,  fullMinusOfferAmount Float64,  lastDealTm String,  dqAndJqPayAmount Float64,  dealSaleQtty Int64,  isPlus Int64,  lastThirdIdDealTm String,  promotionAmount Float64,  dealAmount Float64,  lastUserDealTm String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_app_zh_customer_deal_user_lastbuy_day/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, thirdIndId, brandId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_app_zh_customer_deal_user_lastbuy_day_d ( skuOfferAmount Float64,  brandId String,  dateTime String,  promotionType Array(String),  suitOfferAmount Float64,  lastBrandIdDealTm String,  userLogAcct String,  thirdIndId String,  provinceId String,  provinceName String,  todayDealNum Int64,  fullMinusOfferAmount Float64,  lastDealTm String,  dqAndJqPayAmount Float64,  dealSaleQtty Int64,  isPlus Int64,  lastThirdIdDealTm String,  promotionAmount Float64,  dealAmount Float64,  lastUserDealTm String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_app_zh_customer_deal_user_lastbuy_day, rand())
;
CREATE TABLE bc_online.ck_bc_flow_attention ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_bc_flow_attention/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_bc_flow_attention_d ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_bc_flow_attention, rand())
;
CREATE TABLE bc_online.ck_bc_flow_browselog ( firstSourceName String,  flagId String,  browserUniqId String,  dateTime String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  brandNameFull String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  userSiteProvinceName String,  brandId String,  shopId String,  flagType String,  flagName String,  thirdSourceName String,  sessionRt Int64,  skuId String,  flagValueStatus String,  shopType String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_bc_flow_browselog/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_bc_flow_browselog_d ( firstSourceName String,  flagId String,  browserUniqId String,  dateTime String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  brandNameFull String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  userSiteProvinceName String,  brandId String,  shopId String,  flagType String,  flagName String,  thirdSourceName String,  sessionRt Int64,  skuId String,  flagValueStatus String,  shopType String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_bc_flow_browselog, rand())
;
CREATE TABLE bc_online.ck_bc_flow_cartlog ( firstSourceName String,  flagId String,  cartDt String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_bc_flow_cartlog/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_bc_flow_cartlog_d ( firstSourceName String,  flagId String,  cartDt String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_bc_flow_cartlog, rand())
;
CREATE TABLE bc_online.ck_bc_flow_deallog ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  saleOrdId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  afterPrefrAmount Float64,  saleQtty Float64,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String,  isLogic String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_bc_flow_deallog/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, isLogic, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_bc_flow_deallog_d ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  saleOrdId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  afterPrefrAmount Float64,  saleQtty Float64,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String,  isLogic String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_bc_flow_deallog, rand())
;
CREATE TABLE bc_online.ck_bc_flow_orderlog ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  saleOrdId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  afterPrefrAmount Float64,  saleQtty Int32,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_bc_flow_orderlog/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_bc_flow_orderlog_d ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  saleOrdId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  afterPrefrAmount Float64,  saleQtty Int32,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_bc_flow_orderlog, rand())
;
CREATE TABLE bc_online.ck_book_trade_browselog_base ( browserUniqId String,  dateTime String,  terminalId String,  providerId String,  skuId String,  pv Float64,  thirdIndId String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_book_trade_browselog_base/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, providerId, thirdIndId, terminalId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_book_trade_browselog_base_d ( browserUniqId String,  dateTime String,  terminalId String,  providerId String,  skuId String,  pv Float64,  thirdIndId String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_book_trade_browselog_base, rand())
;
CREATE TABLE bc_online.ck_book_trade_deallog_base ( totalPrice Float64,  dateTime String,  terminalId String,  providerId String,  skuId String,  userLogAcct String,  thirdIndId String,  dealProNum Float64) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_book_trade_deallog_base/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, providerId, thirdIndId, terminalId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_book_trade_deallog_base_d ( totalPrice Float64,  dateTime String,  terminalId String,  providerId String,  skuId String,  userLogAcct String,  thirdIndId String,  dealProNum Float64) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_book_trade_deallog_base, rand())
;
CREATE TABLE bc_online.ck_crm_shop_ord_extraction ( dateTime String,  ordEndDate String,  ordStartDate String,  skuId String,  sonOrdId String,  userLogAcct String,  brandId String,  goodName String,  parentOrdId String,  ordStatus String,  ordAmt String,  shopId String,  goodsQtty String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_crm_shop_ord_extraction/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, shopId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_crm_shop_ord_extraction_d ( dateTime String,  ordEndDate String,  ordStartDate String,  skuId String,  sonOrdId String,  userLogAcct String,  brandId String,  goodName String,  parentOrdId String,  ordStatus String,  ordAmt String,  shopId String,  goodsQtty String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_crm_shop_ord_extraction, rand())
;
CREATE TABLE bc_online.ck_flow_browselog_base ( firstSourceName String,  flagId String,  browserUniqId String,  dateTime String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  userSiteProvinceName String,  brandId String,  shopId String,  flagType String,  flagName String,  thirdSourceName String,  sessionRt Int64,  skuId String,  flagValueStatus String,  shopType String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_flow_browselog_base/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_flow_browselog_base_d ( firstSourceName String,  flagId String,  browserUniqId String,  dateTime String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  userSiteProvinceName String,  brandId String,  shopId String,  flagType String,  flagName String,  thirdSourceName String,  sessionRt Int64,  skuId String,  flagValueStatus String,  shopType String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_flow_browselog_base, rand())
;
CREATE TABLE bc_online.ck_flow_cartlog_base ( firstSourceName String,  flagId String,  cartDt String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_flow_cartlog_base/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_flow_cartlog_base_d ( firstSourceName String,  flagId String,  cartDt String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_flow_cartlog_base, rand())
;
CREATE TABLE bc_online.ck_flow_deallog_lbase ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  saleOrdId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  afterPrefrAmount Float64,  saleQtty Int32,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String,  isLogic String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_flow_deallog_lbase/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, isLogic, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_flow_deallog_lbase_d ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  saleOrdId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  afterPrefrAmount Float64,  saleQtty Int32,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String,  isLogic String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_flow_deallog_lbase, rand())
;
CREATE TABLE bc_online.ck_flow_orderlog_base ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  saleOrdId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  afterPrefrAmount Float64,  saleQtty Int32,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_flow_orderlog_base/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, firstSourceId, secondSourceId, thirdSourceId, flagType, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_flow_orderlog_base_d ( firstSourceName String,  flagId String,  dt String,  secondSourceName String,  flagUrl String,  terminalId String,  virtualId Array(String),  firstSourceId String,  saleOrdId String,  userLogAcct String,  thirdSourceId String,  secondSourceId String,  thirdIndId String,  brandId String,  dateTime String,  shopId String,  afterPrefrAmount Float64,  saleQtty Int32,  flagType String,  flagName String,  shopType String,  thirdSourceName String,  skuId String,  flagValueStatus String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_flow_orderlog_base, rand())
;
CREATE TABLE bc_online.ck_product_abnormal_base ( dateTime String,  virtualId Array(String),  skuId String,  rankValue Int32,  type String,  thirdIndId String,  brandId String,  secondKpi Float64,  firstKpi Float64,  cycRing Float64,  isLogic String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_product_abnormal_base/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, brandId, thirdIndId, type, virtualId, isLogic) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_product_abnormal_base_d ( dateTime String,  virtualId Array(String),  skuId String,  rankValue Int32,  type String,  thirdIndId String,  brandId String,  secondKpi Float64,  firstKpi Float64,  cycRing Float64,  isLogic String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_product_abnormal_base, rand())
;
CREATE TABLE bc_online.ck_product_browselog_base ( browserUniqId String,  dateTime String,  terminalId String,  virtualId Array(String),  skuId String,  pv Float64,  thirdIndId String,  brandId String,  shopId String,  sessionRt Float64,  shopType String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_product_browselog_base/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_product_browselog_base_d ( browserUniqId String,  dateTime String,  terminalId String,  virtualId Array(String),  skuId String,  pv Float64,  thirdIndId String,  brandId String,  shopId String,  sessionRt Float64,  shopType String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_product_browselog_base, rand())
;
CREATE TABLE bc_online.ck_product_cartlog_base ( dateTime String,  terminalId String,  virtualId Array(String),  skuId String,  userLogAcct String,  thirdIndId String,  brandId String,  shopId String,  shopType String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_product_cartlog_base/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_product_cartlog_base_d ( dateTime String,  terminalId String,  virtualId Array(String),  skuId String,  userLogAcct String,  thirdIndId String,  brandId String,  shopId String,  shopType String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_product_cartlog_base, rand())
;
CREATE TABLE bc_online.ck_product_deal_lbase ( dateTime String,  dt String,  terminalId String,  virtualId Array(String),  saleName String,  skuId String,  saleOrdId String,  userLogAcct String,  thirdIndId String,  saleAmt Float64,  brandId String,  shopId String,  priceZoneName String,  saleQtty Float64,  paymentModeDec String,  isLogic String,  shopType String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_product_deal_lbase/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, isLogic, terminalId, brandId, thirdIndId, virtualId, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_product_deal_lbase_d ( dateTime String,  dt String,  terminalId String,  virtualId Array(String),  saleName String,  skuId String,  saleOrdId String,  userLogAcct String,  thirdIndId String,  saleAmt Float64,  brandId String,  shopId String,  priceZoneName String,  saleQtty Float64,  paymentModeDec String,  isLogic String,  shopType String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_product_deal_lbase, rand())
;
CREATE TABLE bc_online.ck_product_deallog_lbase ( dateTime String,  dt String,  terminalId String,  virtualId Array(String),  skuId String,  saleOrdId String,  userLogAcct String,  thirdIndId String,  saleAmt Float64,  brandId String,  shopId String,  saleQtty Float64,  isLogic String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_product_deallog_lbase/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, isLogic, terminalId, brandId, thirdIndId, virtualId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_product_deallog_lbase_d ( dateTime String,  dt String,  terminalId String,  virtualId Array(String),  skuId String,  saleOrdId String,  userLogAcct String,  thirdIndId String,  saleAmt Float64,  brandId String,  shopId String,  saleQtty Float64,  isLogic String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_product_deallog_lbase, rand())
;
CREATE TABLE bc_online.ck_trade_deal_lbase ( dateTime String,  dt String,  terminalId String,  virtualId Array(String),  saleName String,  skuId String,  saleOrdId String,  userLogAcct String,  thirdIndId String,  saleAmt Float64,  brandId String,  shopId String,  priceZoneName String,  saleQtty Float64,  paymentModeDec String,  isLogic String,  shopType String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_trade_deal_lbase/{shard}\', \'{replica}\') PARTITION BY dt ORDER BY (dateTime, isLogic, shopType, terminalId, brandId, thirdIndId, virtualId, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_trade_deal_lbase_d ( dateTime String,  dt String,  terminalId String,  virtualId Array(String),  saleName String,  skuId String,  saleOrdId String,  userLogAcct String,  thirdIndId String,  saleAmt Float64,  brandId String,  shopId String,  priceZoneName String,  saleQtty Float64,  paymentModeDec String,  isLogic String,  shopType String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_trade_deal_lbase, rand())
;
CREATE TABLE bc_online.ck_trade_flow_base ( browserUniqId String,  dateTime String,  terminalId String,  virtualId Array(String),  skuId String,  pv Float64,  thirdIndId String,  brandId String,  shopId String,  shopType String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_trade_flow_base/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_trade_flow_base_d ( browserUniqId String,  dateTime String,  terminalId String,  virtualId Array(String),  skuId String,  pv Float64,  thirdIndId String,  brandId String,  shopId String,  shopType String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_trade_flow_base, rand())
;
CREATE TABLE bc_online.ck_trade_order_base ( dateTime String,  terminalId String,  virtualId Array(String),  saleName String,  skuId String,  saleOrdId String,  userLogAcct String,  thirdIndId String,  saleAmt Float64,  brandId String,  shopId String,  priceZoneName String,  saleQtty Float64,  paymentModeDec String,  shopType String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_trade_order_base/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, shopType, terminalId, brandId, thirdIndId, virtualId, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_trade_order_base_d ( dateTime String,  terminalId String,  virtualId Array(String),  saleName String,  skuId String,  saleOrdId String,  userLogAcct String,  thirdIndId String,  saleAmt Float64,  brandId String,  shopId String,  priceZoneName String,  saleQtty Float64,  paymentModeDec String,  shopType String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_trade_order_base, rand())
;
CREATE TABLE bc_online.ck_zh_customer_all_deal_user_cycle_repurchase ( repurchaseNum Int64,  brandId String,  dateTime String,  userLogAcct String,  thirdIndId String,  repurchaseCycle String) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_zh_customer_all_deal_user_cycle_repurchase/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, thirdIndId, brandId, repurchaseCycle) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_zh_customer_all_deal_user_cycle_repurchase_d ( repurchaseNum Int64,  brandId String,  dateTime String,  userLogAcct String,  thirdIndId String,  repurchaseCycle String) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_zh_customer_all_deal_user_cycle_repurchase, rand())
;
CREATE TABLE bc_online.ck_zh_customer_sku_price_band_sale_detail ( brandId String,  dateTime String,  skuId String,  userLogAcct String,  skuName String,  thirdIndId String,  priceBandId String,  lastDealDate String,  dealSaleQtty Int64,  priceBandName String,  dealAmount Float64) ENGINE = ReplicatedMergeTree(\'/ppzhck.test.local/tables/bc_online/ck_zh_customer_sku_price_band_sale_detail/{shard}\', \'{replica}\') PARTITION BY dateTime ORDER BY (dateTime, thirdIndId, brandId, skuId) SETTINGS index_granularity = 8192
;
CREATE TABLE bc_online.ck_zh_customer_sku_price_band_sale_detail_d ( brandId String,  dateTime String,  skuId String,  userLogAcct String,  skuName String,  thirdIndId String,  priceBandId String,  lastDealDate String,  dealSaleQtty Int64,  priceBandName String,  dealAmount Float64) ENGINE = Distributed(conf_6shard_2replica, bc_online, ck_zh_customer_sku_price_band_sale_detail, rand())
;
