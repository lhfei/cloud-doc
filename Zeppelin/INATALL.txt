```shell
export MAVEN_OPTS="-Xmx2g -XX:MaxPermSize=2048m" 

```



------------------------------------------------------------------------------------
@see https://www.digitalocean.com/community/tutorials/how-to-set-up-r-on-ubuntu-14-04

https://cloud.r-project.org/bin/linux/ubuntu/trusty/r-base-core_3.3.1-1trusty0_amd64.deb
------------------------------------------------------------------------------------

====================================================================================
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
# Install NOde.JS
------------------------------------------------------------------------------------
@see https://nodejs.org/en/download/package-manager/

curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -
sudo apt-get install -y nodejs

## Alternatively, for Node.js v6:

curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
sudo apt-get install -y nodejs
------------------------------------------------------------------------------------
# build
#spark 1.x

> mvn clean install -e -DskipTests -Dspark.version=1.6.2 -Dhadoop.version=2.7.2 -Pr -Psparkr -Pvendor-repo -Pexamples -Drat.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true


#spark 2.x 
>mvn clean install -e -DskipTests -Dspark.version=2.0.0 -Dhadoop.version=2.7.2 -Pscala-2.11 -Pr -Psparkr -Pvendor-repo -Pexamples -Drat.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true
------------------------------------------------------------------------------------
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Zeppelin ........................................... SUCCESS [  9.807 s]
[INFO] Zeppelin: Interpreter .............................. SUCCESS [ 16.197 s]
[INFO] Zeppelin: Zengine .................................. SUCCESS [ 10.435 s]
[INFO] Zeppelin: Display system apis ...................... SUCCESS [ 25.923 s]
[INFO] Zeppelin: Spark dependencies ....................... SUCCESS [  01:39 h]
[INFO] Zeppelin: Spark .................................... SUCCESS [ 41.457 s]
[INFO] Zeppelin: Markdown interpreter ..................... SUCCESS [  1.161 s]
[INFO] Zeppelin: Angular interpreter ...................... SUCCESS [  0.896 s]
[INFO] Zeppelin: Shell interpreter ........................ SUCCESS [  1.217 s]
[INFO] Zeppelin: Livy interpreter ......................... SUCCESS [  1.433 s]
[INFO] Zeppelin: HBase interpreter ........................ SUCCESS [  8.597 s]
[INFO] Zeppelin: PostgreSQL interpreter ................... SUCCESS [  2.218 s]
[INFO] Zeppelin: JDBC interpreter ......................... SUCCESS [  2.145 s]
[INFO] Zeppelin: File System Interpreters ................. SUCCESS [  2.453 s]
[INFO] Zeppelin: Flink .................................... SUCCESS [ 15.681 s]
[INFO] Zeppelin: Apache Ignite interpreter ................ SUCCESS [  3.087 s]
[INFO] Zeppelin: Kylin interpreter ........................ SUCCESS [  1.202 s]
[INFO] Zeppelin: Python interpreter ....................... SUCCESS [  1.088 s]
[INFO] Zeppelin: Lens interpreter ......................... SUCCESS [  7.952 s]
[INFO] Zeppelin: Apache Cassandra interpreter ............. SUCCESS [01:34 min]
[INFO] Zeppelin: Elasticsearch interpreter ................ SUCCESS [  7.035 s]
[INFO] Zeppelin: Alluxio interpreter ...................... SUCCESS [  5.505 s]
[INFO] Zeppelin: web Application .......................... SUCCESS [02:18 min]
[INFO] Zeppelin: Server ................................... SUCCESS [ 30.142 s]
[INFO] Zeppelin: Packaging distribution ................... SUCCESS [  4.715 s]
[INFO] Zeppelin: R Interpreter ............................ SUCCESS [ 49.150 s]
[INFO] Zeppelin: Examples ................................. SUCCESS [  0.497 s]
[INFO] Zeppelin: Example application - Clock .............. SUCCESS [  0.923 s]
[INFO] Zeppelin: Example application - Horizontal Bar chart SUCCESS [  0.764 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:47 h
[INFO] Finished at: 2016-07-31T10:04:48-07:00
[INFO] Final Memory: 202M/672M
[INFO] ------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
# Install R packages
------------------------------------------------------------------------------------
install.packages('devtools', repos = 'http://cran.us.r-project.org')
install.packages('knitr', repos = 'http://cran.us.r-project.org')
install.packages('ggplot2', repos = 'http://cran.us.r-project.org')
install.packages(c('devtools','mplot', 'googleVis'), repos = 'http://cran.us.r-project.org'); require(devtools); install_github('ramnathv/rCharts')
install.packages("evaluate", dependencies = TRUE, repos='http://cran.us.r-project.org')
install.packages("base64enc", dependencies = TRUE, repos='http://cran.us.r-project.org')
install.packages("devtools", dependencies = TRUE, repos='http://cran.us.r-project.org')
install.packages("Cairo", dependencies = TRUE, repos='http://cran.us.r-project.org')
install.packages("dplyr", dependencies = TRUE, repos='http://cran.us.r-project.org')
install.packages("caret", dependencies = TRUE, repos='http://cran.us.r-project.org')
install.packages("repr", dependencies = TRUE, repos='http://irkernel.github.io/')
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
install.packages('glmnet', repos = 'http://cran.us.r-project.org')
install.packages('pROC', repos = 'http://cran.us.r-project.org')
install.packages('data.table', repos = 'http://cran.us.r-project.org')
install.packages('caret', repos = 'http://cran.us.r-project.org')
install.packages('sqldf', repos = 'http://cran.us.r-project.org')
install.packages('wordcloud', repos = 'http://cran.us.r-project.org')
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
# Install SparkR
------------------------------------------------------------------------------------
>{SPARK_HOME}/R/install-dev.sh

	#test Spark env
	>./bin/spark-submit examples/src/main/r/dataframe.R
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
# Add SparkR to R .libPaths()
------------------------------------------------------------------------------------
if (!require('devtools')) install.packages('devtools')
devtools::install_github('apache/spark@v1.6.2', subdir='R/pkg')

Sys.setenv(SPARK_HOME='/usr/local/cloud/spark-1.6.2')
.libPaths(c(file.path(Sys.getenv('SPARK_HOME'), 'R', 'lib'), .libPaths()))
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
```
./dev/change_scala_version.sh 2.10
mvn clean package -DskipTests -Pspark-2.0 -Phadoop-2.7 -Pscala-2.10 -Ppyspark -Pr -Psparkr -Psparkr -Pvendor-repo -Pexamples -Drat.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -X
```

mvn clean -X -rf :zeppelin-spark-dependencies_2.10

------------------------------------------------------------------------------------
mvn clean package install -e -Dhadoop.version=2.7.2 -Dspark.version=2.0.0 -Pspark-2.0.0 -Pscala-2.11 -Ppyspark -Pr -Psparkr -Pvendor-repo -Pexamples -Drat.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipTests



# with CDH

mvn clean package -Pspark-2.0 -Dhadoop.version=2.6.0-cdh5.7.0 -Phadoop-2.6 -Pvendor-repo -DskipTests -e
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
[DEBUG] -- end configuration --
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] Zeppelin ........................................... SUCCESS [ 14.455 s]
[INFO] Zeppelin: Interpreter .............................. SUCCESS [ 29.449 s]
[INFO] Zeppelin: Zengine .................................. SUCCESS [ 23.418 s]
[INFO] Zeppelin: Display system apis ...................... SUCCESS [ 28.454 s]
[INFO] Zeppelin: Spark dependencies ....................... SUCCESS [02:11 min]
[INFO] Zeppelin: Spark .................................... SUCCESS [01:07 min]
[INFO] Zeppelin: Markdown interpreter ..................... SUCCESS [  4.116 s]
[INFO] Zeppelin: Angular interpreter ...................... SUCCESS [  3.803 s]
[INFO] Zeppelin: Shell interpreter ........................ SUCCESS [  3.982 s]
[INFO] Zeppelin: Livy interpreter ......................... SUCCESS [  4.924 s]
[INFO] Zeppelin: HBase interpreter ........................ SUCCESS [ 22.240 s]
[INFO] Zeppelin: PostgreSQL interpreter ................... SUCCESS [  4.459 s]
[INFO] Zeppelin: JDBC interpreter ......................... SUCCESS [  5.837 s]
[INFO] Zeppelin: File System Interpreters ................. SUCCESS [  6.444 s]
[INFO] Zeppelin: Flink .................................... SUCCESS [ 22.919 s]
[INFO] Zeppelin: Apache Ignite interpreter ................ SUCCESS [  5.219 s]
[INFO] Zeppelin: Kylin interpreter ........................ SUCCESS [  4.221 s]
[INFO] Zeppelin: Python interpreter ....................... SUCCESS [  4.019 s]
[INFO] Zeppelin: Lens interpreter ......................... SUCCESS [ 17.810 s]
[INFO] Zeppelin: Apache Cassandra interpreter ............. SUCCESS [01:36 min]
[INFO] Zeppelin: Elasticsearch interpreter ................ SUCCESS [ 14.425 s]
[INFO] Zeppelin: BigQuery interpreter ..................... SUCCESS [  4.972 s]
[INFO] Zeppelin: Alluxio interpreter ...................... SUCCESS [ 12.213 s]
[INFO] Zeppelin: web Application .......................... SUCCESS [02:30 min]
[INFO] Zeppelin: Server ................................... SUCCESS [ 44.809 s]
[INFO] Zeppelin: Packaging distribution ................... SUCCESS [ 19.744 s]
[INFO] Zeppelin: R Interpreter ............................ SUCCESS [ 56.101 s]
[INFO] Zeppelin: Examples ................................. SUCCESS [  1.936 s]
[INFO] Zeppelin: Example application - Clock .............. SUCCESS [  3.815 s]
[INFO] Zeppelin: Example application - Horizontal Bar chart SUCCESS [  4.034 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 13:34 min
[INFO] Finished at: 2016-08-19T10:33:40-07:00
[INFO] Final Memory: 206M/702M
[INFO] ------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
./bin/install-interpreter.sh --all
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
# conf/zeppelin-env.sh
------------------------------------------------------------------------------------
export SPARK_HOME=/usr/local/cloud/spark-1.6.2
export HADOOP_HOME=${HADOOP_HOME:-/usr/local/cloud/hadoop-2.7.2}
export HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-/usr/local/cloud/hadoop-2.7.2/etc/hadoop}
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
# zeppelin-web error
------------------------------------------------------------------------------------
	<!-- add arguments into grunt plugin: -->
	  <execution>
		<id>grunt build</id>
		<goals>
		  <goal>grunt</goal>
		</goals>
		<configuration>
		  <arguments>build  --allsow-root  --no-color --force</arguments>
		</configuration>
	  </execution>
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
# Enable Remote Debug

# add the following lines below to the end of ${ZEPPELIN_HOME}/conf/zeppelin-env.sh 
export ZEPPELIN_MEM="-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"
------------------------------------------------------------------------------------
# start
>cd zeppelin-server
>SPARK_HOME=/usr/local/cloud/spark-1.6.2 HADOOP_HOME=/usr/local/cloud/hadoop-2.7.2 JAVA_HOME=/usr/local/cloud/java/jdk1.8.0_92 ZEPPELIN_PORT=8989 mvn exec:java -Dexec.mainClass="org.apache.zeppelin.server.ZeppelinServer" -Dexec.args="" -e
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
cd zeppelin-server
HADOOP_HOME=/usr/local/cloud/hadoop-2.7.2 JAVA_HOME=/usr/local/cloud/java/jdk1.8.0_92 ZEPPELIN_PORT=8989 mvn exec:java -Dexec.mainClass="org.apache.zeppelin.server.ZeppelinServer" -Dexec.args=""
------------------------------------------------------------------------------------
Downloading Node.js from http://nodejs.org/dist/v0.10.22/node-v0.10.22-linux-x64.tar.gz to /home/lhfei/app_workspaces/Zeppelin-With-R/zeppelin-web/node_tmp/node.tar.gz
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
====================================================================================
# Add 3rd party Library in to an Interpreter

	@see: https://zeppelin.apache.org/docs/0.7.0-SNAPSHOT/manual/dependencymanagement.html
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
====================================================================================
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
====================================================================================
------------------------------------------------------------------------------------
====================================================================================
Livy
------------------------------------------------------------------------------------
#Step 1: Install Livy server
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
====================================================================================
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
====================================================================================
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
====================================================================================

####################################################################################
====================================================================================
------------------------------------------------------------------------------------
mvn clean package -Pr -Ppyspark -Psparkr -DskipTests -X
------------------------------------------------------------------------------------
mvn clean package install -e -Dhadoop.version=2.7.2 -Dspark.version=2.0.0 -Pspark-2.0 -Pscala-2.11 -Phadoop-2.7 -Ppyspark -Pr -Psparkr -Pvendor-repo -Pexamples -Drat.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipTests
------------------------------------------------------------------------------------


------------------------------------------------------------------------------------
------------------------------------------------------------------------------------

SPARK_HOME=/usr/local/cloud/spark-2.0.0-bin-hadoop2.7 HADOOP_HOME=/usr/local/cloud/hadoop-2.7.2 JAVA_HOME=/usr/local/cloud/java/jdk1.8.0_92 ZEPPELIN_PORT=8989 mvn exec:java -Dexec.mainClass="org.apache.zeppelin.server.ZeppelinServer" -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000 -Dexec.args="" -e -Drat.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -DskipTests
------------------------------------------------------------------------------------
====================================================================================
# REST API
====================================================================================
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
# Get an existing notebook information
http://[zeppelin-server]:[zeppelin-port]/api/notebook/[notebookId]
------------------------------------------------------------------------------------
# Run a paragraph
http://[zeppelin-server]:[zeppelin-port]/api/notebook/job/[notebookId]/[paragraphId]
http://master2.cloud.cn:8989/api/notebook/job/2BUP41KKC/20160825-011346_35090149
------------------------------------------------------------------------------------
# Get a paragraph information
http://[zeppelin-server]:[zeppelin-port]/api/notebook/[notebookId]/paragraph/[paragraphId]

http://master2.cloud.cn:8989/api/notebook/2BUP41KKC/paragraph/20160825-011346_35090149
------------------------------------------------------------------------------------
# Get the status of a single paragraph
http://[zeppelin-server]:[zeppelin-port]/api/notebook/job/[notebookId]/[paragraphId]
------------------------------------------------------------------------------------
# Create a new paragraph
http://[zeppelin-server]:[zeppelin-port]/api/notebook/[notebookId]/paragraph# 
------------------------------------------------------------------------------------
# Run a paragraph
http://[zeppelin-server]:[zeppelin-port]/api/notebook/job/[notebookId]/[paragraphId]
------------------------------------------------------------------------------------
# Stop a paragraph
http://[zeppelin-server]:[zeppelin-port]/api/notebook/job/[notebookId]/[paragraphId]
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
====================================================================================
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
====================================================================================

------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
------------------------------------------------------------------------------------

