# (Copyright) Confluent, Inc.

############################# Server Basics #############################

# A comma separated list of Apache Kafka cluster host names (required)
# NOTE: should not be localhost
bootstrap.servers=localhost:9092

# A comma separated list of ZooKeeper host names (for ACLs)
zookeeper.connect=localhost:2181

############################# Control Center Settings #############################

# Mode for the Control Center. Valid values are "all" or "management"
confluent.controlcenter.mode.enable=management

# Unique identifier for the Control Center
confluent.controlcenter.id=1

# Directory for Control Center to store data
# NOTE: this should be changed to point to a reliable directory
confluent.controlcenter.data.dir=/tmp/confluent/control-center

# License string for the Control Center
# confluent.license=Xyz

# A comma separated list of Connect host names
confluent.controlcenter.connect.connect-default.cluster=http://localhost:8083

# KSQL cluster URL
confluent.controlcenter.ksql.ksqlDB.url=http://localhost:8088

# Schema Registry cluster URL
confluent.controlcenter.schema.registry.url=http://localhost:8081

# Kafka REST endpoint URL
confluent.controlcenter.streams.cprest.url=http://localhost:8090

# Settings to enable email alerts
#confluent.controlcenter.mail.enabled=true
#confluent.controlcenter.mail.host.name=smtp1
#confluent.controlcenter.mail.port=587
#confluent.controlcenter.mail.from=kafka-monitor@example.com
#confluent.controlcenter.mail.password=abcdefg
#confluent.controlcenter.mail.starttls.required=true

# Replication for internal Control Center topics.
# Only lower them for testing.
# WARNING: replication factor of 1 risks data loss.
confluent.controlcenter.internal.topics.replication=1

# Number of partitions for Control Center internal topics
# Increase for better throughput on monitored data (CPU bound)
# NOTE: changing requires running `bin/control-center-reset` prior to restart
confluent.controlcenter.internal.topics.partitions=2

# Topic used to store Control Center configuration
# WARNING: replication factor of 1 risks data loss.
confluent.controlcenter.command.topic.replication=1

# Enable automatic UI updates
confluent.controlcenter.ui.autoupdate.enable=false

# Enable usage data collection
confluent.controlcenter.usage.data.collection.enable=true

# Enable Controller Chart in Broker page
#confluent.controlcenter.ui.controller.chart.enable=true

# Enable hosted monitoring UI features in Control Center
# confluent.controlcenter.hosted.monitoring.ui.enable=true

############################# Control Center CSRF Settings #############################
# Enable token based mitigation for Cross-Site Request Forgery
# confluent.controlcenter.rest.csrf.prevention.enable=true

# Set the token expiration time
# confluent.controlcenter.rest.csrf.prevention.token.expiration.minutes=30

############################# Control Center RBAC Settings #############################

# Enable RBAC authorization in Control Center by providing a comma-separated list of Metadata Service (MDS) URLs
#confluent.metadata.bootstrap.server.urls=http://localhost:8090

# MDS credentials of an RBAC user for Control Center to act on behalf of
# NOTE: This user must be a SystemAdmin on each Apache Kafka cluster
#confluent.metadata.basic.auth.user.info=username:password

# Enable SASL-based authentication for each Apache Kafka cluster (SASL_PLAINTEXT or SASL_SSL required)
#confluent.controlcenter.streams.security.protocol=SASL_PLAINTEXT
#confluent.controlcenter.kafka.<name>.security.protocol=SASL_PLAINTEXT

# Enable authentication using a bearer token for Control Center's REST endpoints
#confluent.controlcenter.rest.authentication.method=BEARER

# Public key used to verify bearer tokens
# NOTE: Must match the MDS public key
#public.key.path=/path/to/publickey.pem

################################## Confluent Telemetry Settings  ##################################

# To start using Telemetry, first generate a Confluent Cloud API key/secret. This can be done with
# instructions at https://docs.confluent.io/current/cloud/using/api-keys.html. Note that you should
# be using the '--resource cloud' flag.
#
# After generating an API key/secret, to enable Telemetry uncomment the lines below and paste
# in your API key/secret.
#
#confluent.telemetry.enabled=true
#confluent.telemetry.api.key=<CLOUD_API_KEY>
#confluent.telemetry.api.secret=<CCLOUD_API_SECRET>
